<!DOCTYPE html>
<html>

<head>
  <title>加密文件</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.0.2/tailwind.min.css" rel="stylesheet">
</head>

<body class="h-screen bg-black overflow-hidden" onload="init()">
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
  <script type="text/javascript">

    var key = ""

    function initKey() {
      key = CryptoJS.enc.Utf8.parse(btoa(document.getElementById('pass').value))
      return true
    }

    function Decrypt() {
      if (initKey()) {
        encryptedHexStr = CryptoJS.enc.Hex.parse('970c754a4476c0bb519d844a5937ddca77acfeaf917ef75f9ab14794034564d57b196d65194a30946aa1041b57336b495c994953427acd1839227b9f7cd456d2068ec85b0c216376fd24eb4519c02968e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a74988b2b4c6032046c9e2c17fde26cc5c6bd004b2bc244ca89457645b384a2c3971ff1503513d2bd18dbfe627884551970a9b6f2eb641ac42f4618fdb375a3cd5dcbd9015c2619ac4decdf9cef7b969b2ab1db6d137293770b333bafeb435d54e71e3ee4e95e0633ab835db2a6a81238b6f1e9c770aeeecc314a5fce22275bc7f4b4f2d99a366be26fbdf8711085b1ee72e07e37de638bcb3326f7501a6aa531f94b91323b4362497cb7508b0c87ab51dde9eabc32d321d8809567946d8e7c2bcc2e05a879ac33008f4f54dbd0a61d5c12b411f1dd45e7d3e6453538e7128f7695b71f18628891c6497e435c0a559608d8dc8ed73fe2e2a2cb8cb7c039b940ea0e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7a77770662fc14354a21ea0bd1ad566593775cc75616846d67a2595f3eab8e1e6c1a6ba019fbaa4a68714f377c362a1a3e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7ef6610e658158413c6b3345ee9266e77d2310d84ba8573acd5e3d3821107b2bf6b8675653ac8f9318bd0d734c3917269b53e7bbfbe9fc04856fabf38993de61938f46512490217944cdb2db0795ee8206d813857760af3bd5f4b4b6ad8b7df54e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a73cf3de7c73eb666340ff321429f27a83b835a72ac31310cd2d3cb197bb8425d92f548f348b15698e95c68acc3f790d940a84e1f2ca994f1b8ce432edbcc0a2c99c416924a903debd6b31980fafeae3610d2c04fb48952332111b8019973ec7075ce58dec7dc22ad854bbb22f405dda9c57daa6ab3d88d986dcbe5f6c3f5df8ac16552c22c03618d667b88f62724e908648d2f409d871abab9681e11acffcc60ebd437222712348ea9cadb37984aa44710220681cde4a8a5ec8d05f8e5814c8f1d55f7dd9f0210efba8a8cf83db783366158e7dc0e8e783d19be43f9675e18805e8bd31ace1bec2c849612df78fa4da1e5b0ad8570b8ed247fdeddc135b7e5d2556cfbf422edaf643d278b822f9f132531222d942cc46e4aac681ee6cf124761e610ae0beed8ced1338912528d58b19ac9452eaa00602258a4b107b44cd3cec30a33d2e885620502e164c50aa5fb10077b2913622a702f794c5317cf0de84e8caacc68b19f8e16128d5fa880813f7e5d2e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a763b5e39e97fafcf181966dfa759c8fa49a5ddc139b8a04daa785f1b541529dd907064bc0b26468a8a3a19fbfd7c1b0ace1aea0c9e32f3c6ecccc28752f0843e54d0b0b54ef55b9cec5305fc1d70f636636e3074ea2515401a8a91c13e24bcac07779db98fda193f03cfc107de7428a2e79b9582a062695fc04bc2b79e7fc1ac679dbc085a53e148e72ef62d070e4ccbfe296308edbc9c8b9735505946f78248e37cb04e463616df18d755cd97e5b648ee0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7ec2725e6f5eaa758bca6110384215277ed2c6c1176867615aa27a67b2b38b48ecba9953c3d2988ee7f2551d1555018116042a335a45d22bb8faaeecdb1efd65690c58247d9ea3e9ec9c7030d5b93bbe78e33535144a522279311dc754a6ffdc22c243826cfead28f0c55a514c92f535d3174dcf78c4885828dbefcdefb0f7157e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7734a2b9f7b38f820ed927b655fa004f24379b25afaa28acfdb0f8be7fbe2a0931e8f7ff02970de4f6e72da235fe557dc9abfc104ec4e89a30229921e2e61fc7331d412a0655fbced35ad01a86ac1b497e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a79345adb2262f003ce1c4c22be0b260d3ab54d138dca7ee56749b25fce923b7ba9fa869640230b380839e10ccbb1a98be9b884257545cff1f28f97872ac57100e0e40e2f0e0ece9de6e787ecd3140dec735e7d87fa12b366023863e4e297f075b')
        encryptedBase64Str = CryptoJS.enc.Base64.stringify(encryptedHexStr)
        var decryptedData = CryptoJS.AES.decrypt(encryptedBase64Str, key, {
          mode: CryptoJS.mode.ECB,
          padding: CryptoJS.pad.Pkcs7
        })
        try {
          document.getElementById('output').value = decryptedData.toString(CryptoJS.enc.Utf8)
          document.getElementsByClassName('inputpw')[0].style.display = 'none'
          document.getElementsByClassName('result')[0].style.display = 'block'
        } catch (error) {
          if(error.message === 'Malformed UTF-8 data'){
            alert('解密失敗')
          }
        }
      }
    }

    function init() {
      document.getElementById("pass").focus();
    }

    function handleKeyPress(event) {
      if (event.key === "Enter") {
        Decrypt();
      }
    }

  </script>
  <div class="inputpw flex h-screen items-center justify-center ">
    <div class="mx-1 mt-4 p-2">
      <input id="pass" type="password" class="border-b-2 ml-2 text-center" onkeydown="handleKeyPress(event)">
    </div>
  </div>
  <div class="result flex flex-wrap h-full hidden">
      <textarea class="px-4 bg-black appearance-none border rounded text-gray-100 leading-tight focus:outline-none focus:shadow-outline resize-none w-full h-full" type="text" id="output" readonly=""></textarea>
  </div>
</body>

</html>