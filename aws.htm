<!DOCTYPE html>
<html>

<head>
  <title>加密文件</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.0.2/tailwind.min.css" rel="stylesheet">
</head>

<body class="h-screen bg-black overflow-hidden" onload="init()">
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
  <script type="text/javascript">

    var key = ""

    function initKey() {
      key = CryptoJS.enc.Utf8.parse(btoa(document.getElementById('pass').value))
      return true
    }

    function Decrypt() {
      if (initKey()) {
        encryptedHexStr = CryptoJS.enc.Hex.parse('970c754a4476c0bb519d844a5937ddca77acfeaf917ef75f9ab14794034564d57b196d65194a30946aa1041b57336b495c994953427acd1839227b9f7cd456d2068ec85b0c216376fd24eb4519c02968e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a74988b2b4c6032046c9e2c17fde26cc5c6bd004b2bc244ca89457645b384a2c3971ff1503513d2bd18dbfe627884551970a9b6f2eb641ac42f4618fdb375a3cd5dcbd9015c2619ac4decdf9cef7b969b2ab1db6d137293770b333bafeb435d54e71e3ee4e95e0633ab835db2a6a81238b6f1e9c770aeeecc314a5fce22275bc7f4b4f2d99a366be26fbdf8711085b1ee72e07e37de638bcb3326f7501a6aa531f94b91323b4362497cb7508b0c87ab51dde9eabc32d321d8809567946d8e7c2bcc2e05a879ac33008f4f54dbd0a61d5c12b411f1dd45e7d3e6453538e7128f7695b71f18628891c6497e435c0a559608d8dc8ed73fe2e2a2cb8cb7c039b940ea0e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7a77770662fc14354a21ea0bd1ad566593775cc75616846d67a2595f3eab8e1e6c1a6ba019fbaa4a68714f377c362a1a3e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7ef6610e658158413c6b3345ee9266e77d2310d84ba8573acd5e3d3821107b2bf6b8675653ac8f9318bd0d734c3917269b53e7bbfbe9fc04856fabf38993de61938f46512490217944cdb2db0795ee8206d813857760af3bd5f4b4b6ad8b7df54e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a73cf3de7c73eb666340ff321429f27a83b835a72ac31310cd2d3cb197bb8425d92f548f348b15698e95c68acc3f790d940a84e1f2ca994f1b8ce432edbcc0a2c99c416924a903debd6b31980fafeae3610d2c04fb48952332111b8019973ec7075ce58dec7dc22ad854bbb22f405dda9c57daa6ab3d88d986dcbe5f6c3f5df8ac16552c22c03618d667b88f62724e908648d2f409d871abab9681e11acffcc60ebd437222712348ea9cadb37984aa44710220681cde4a8a5ec8d05f8e5814c8f1d55f7dd9f0210efba8a8cf83db783366158e7dc0e8e783d19be43f9675e18805e8bd31ace1bec2c849612df78fa4da1e5b0ad8570b8ed247fdeddc135b7e5d2556cfbf422edaf643d278b822f9f132531222d942cc46e4aac681ee6cf124761e610ae0beed8ced1338912528d58b19ac9452eaa00602258a4b107b44cd3cec30a33d2e885620502e164c50aa5fb10077b2913622a702f794c5317cf0de84e8caacc68b19f8e16128d5fa880813f7e5d2e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a763b5e39e97fafcf181966dfa759c8fa49a5ddc139b8a04daa785f1b541529dd907064bc0b26468a8a3a19fbfd7c1b0ace1aea0c9e32f3c6ecccc28752f0843e54d0b0b54ef55b9cec5305fc1d70f636636e3074ea2515401a8a91c13e24bcac07779db98fda193f03cfc107de7428a2e79b9582a062695fc04bc2b79e7fc1ac6ef8e124a83a8a2805341316b8f0a47be9e5738ae66f70c2a8544a33fefbe48735d7f893896b56cbdb872fe2976053797e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e423c0458baa3e2f054986692c57c35d927d6949e51649e4f9a8f27723209c02a79f6098d6cc7129e2753ee9eddcf007ef0db2430912937681eca343c10f5987f27b161cb8ff39ad89bc42ace1cce7e5d19d45c329474281eeb0a61af8c4b7e64751496c543be27cd86e88cd52b26890adff2deed0bb9f41333dbe1f934d5d0ce0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a76f7de6925bcb0976a802d47c509186364f0a05907af239c13a2a63a454409b36db338f80c797c14705d22cb6a56f1b1c35c7a50d45e6e23e0f012b90b9e231555d1e1b3ca2070bcd191b168c57682e803048a385d431aab868dc3420970c909be0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a73cf3de7c73eb666340ff321429f27a83c5a634dab70323e5a47419e7db3620655394d941b8e216831ff5d9a752254b97b732a0e1fc2e7c356a0b891331d641dca6246d10fcf655d0e3ce695f202e9b7c3f56e1a2550328a5147279d3f8758409e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e0eb5a7d2683a8b21566e374941f74a7e61a1d7ad73c43b559edf15ce4105721534627cc4ccf849560100321204d4f5c4f2ebb20d131576ac5172c70430200e99631922c5e0a41347265c558ac361bb40150f081a673acadf21a3e31008af8ef68e9097e2b72b48f85e7c7fb7b23418c6f0b1e0f51d8cd15945358d297a064c79b558dcef480b18892b3fc32eaea5e2ac2ee76bb5e6cb5cde317de9377cf2fe03c5baa4922435eb17f03ea17f8d1ea4ae77c0a223c4f0cfb6b747034f416f8ddf8b88f985008f9e815ddcf16877cd8120d367b8a11828653b7654e907681452895d857b0e43fa10a524fdb5a37e2a6e3be2af2529b53659cce9e1dd8d9d4f805524a61d3a66ff030789a301c97a2d0310ec06c47d742860d407d204e64f58a43822dcb42bdaf99100ee52f28b1625127a6235e830e7c82cfe276dc66c306d28f380777ff1413aea6c2273cdb2a2c9daa610ae0beed8ced1338912528d58b19ac9452eaa00602258a4b107b44cd3cec306853c2cf454d1ceb8f1109c7612c4d2d7ab5c65d852afa11bb08dcb7f706ef0bec438069901524cbf93384a46942474d1a7af5038f161951a6604c426ab4dc064f98fe68416b9b5463b461c452a5c3bbab5ee1539c7ceb9a873e8f04e789efaa184ac49e7a46f07fcdcc338140e94cfdebc8d0ccf87d24d69d2e32d985aaa5e6db7ca8e0bba1193ce110efb9747a762fbc351f50470fa435e1649b000d5e551cf60aa9a9831c518f442eceef2db369050d4503996a34975940a0de3d3e9f380d3b659b8e7d5d7c97a2a527bfd6ae3149')
        encryptedBase64Str = CryptoJS.enc.Base64.stringify(encryptedHexStr)
        var decryptedData = CryptoJS.AES.decrypt(encryptedBase64Str, key, {
          mode: CryptoJS.mode.ECB,
          padding: CryptoJS.pad.Pkcs7
        })
        try {
          document.getElementById('output').value = decryptedData.toString(CryptoJS.enc.Utf8)
          document.getElementsByClassName('inputpw')[0].style.display = 'none'
          document.getElementsByClassName('result')[0].style.display = 'block'
        } catch (error) {
          if(error.message === 'Malformed UTF-8 data'){
            alert('解密失敗')
          }
        }
      }
    }

    function init() {
      document.getElementById("pass").focus();
    }

    function handleKeyPress(event) {
      if (event.key === "Enter") {
        Decrypt();
      }
    }

  </script>
  <div class="inputpw flex h-screen items-center justify-center ">
    <div class="mx-1 mt-4 p-2">
      <input id="pass" type="password" class="border-b-2 ml-2 text-center" onkeydown="handleKeyPress(event)">
    </div>
  </div>
  <div class="result flex flex-wrap h-full hidden">
      <textarea class="px-4 bg-black appearance-none border rounded text-gray-100 leading-tight focus:outline-none focus:shadow-outline resize-none w-full h-full" type="text" id="output" readonly=""></textarea>
  </div>
</body>

</html>